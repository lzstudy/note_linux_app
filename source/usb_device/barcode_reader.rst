USB 扫码枪
==========

参考源码
--------

barcode_reader.tar.gz_

.. _barcode_reader.tar.gz: http://120.48.82.24:9100/note_linux_app/barcode_reader.tar.gz

.. warning::

   - 源码中的事件要修改成自己对应的事件
   - 不同的扫码枪，结束符可能会不一样，有可能需要修改KEY_SIGNAL

关键原理说明
------------

1. 通过input子系统上报一系列按键, 目前只检测ie.type = EV_KEY的类型。
2. 每当要传输大写字母时，会先发送ie.code = KEY_LEFTSHIFT的按键码，然后再发送ascii的索引。
3. 发送完所有字符时，会发送一个结束符，目前看每家扫码枪有可能不一样

大写字母映射
------------

::

   static const char upper_asc[] = {
       '\0', '\0', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+',     /* 00 - 13 */
       '\0', '\0', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}',     /* 14 - 27 */
       '\0', '\0', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '"', '~',     /* 28 - 41 */
       '\0', '|', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?'
   };

小写字母映射
------------

::

   static const char lower_asc[] = {
       '\0', '\0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=',     /* 00 - 13 */
       '\0', '\0', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']',     /* 14 - 27 */
       '\0', '\0', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\'', '`',    /* 28 - 41 */
       '\0', '\\', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/'
   };

